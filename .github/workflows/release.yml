name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 触发条件：当推送的标签以 'v' 开头时触发

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-18.04, ubuntu-20.04, ubuntu-22.04, centos-7, centos-8, centos-9, windows-latest, windows-2016, windows-2019, windows-2022]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install CMake (Ubuntu)
      if: contains(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake
      shell: bash

    - name: Install CMake (CentOS)
      if: contains(matrix.os, 'centos')
      run: |
        sudo yum update -y
        sudo yum install -y cmake3
        sudo ln -s /usr/bin/cmake3 /usr/bin/cmake
      shell: bash

    - name: Install CMake (Windows)
      if: startsWith(matrix.os, 'windows')
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
      shell: bash

    - name: Create build directory
      run: mkdir build
      shell: bash

    - name: Configure CMake
      run: cmake -DCMAKE_BUILD_TYPE=Release ..
      working-directory: ./build
      shell: bash

    - name: Build project
      run: cmake --build . --config Release
      working-directory: ./build
      shell: bash

    - name: Create release directory
      run: mkdir -p release/bin
      shell: bash

    - name: Copy binaries and config
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          cp ./bin/Release/socks_server.exe release/bin/
          cp config.json release/
        else
          cp ./bin/socks_server release/bin/
          cp config.json release/
        fi
      shell: bash

    - name: Package release
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          7z a socks_server-${{ matrix.os }}.zip ./release/*
        else
          tar -czvf socks_server-${{ matrix.os }}.tar.gz -C release .
        fi
      shell: bash

    - name: Debug artifacts
      run: ls -lR
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: socks_server-${{ matrix.os }}
        path: socks_server-${{ matrix.os }}.${{ runner.os == 'Windows' && 'zip' || 'tar.gz' }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Debug downloaded artifacts
      run: ls -lR artifacts
      shell: bash

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/socks_server-ubuntu-latest/socks_server-ubuntu-latest.tar.gz
        asset_name: socks_server-ubuntu-latest.tar.gz
        asset_content_type: application/gzip

    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/socks_server-ubuntu-18.04/socks_server-ubuntu-18.04.tar.gz
        asset_name: socks_server-ubuntu-18.04.tar.gz
        asset_content_type: application/gzip

    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/socks_server-ubuntu-20.04/socks_server-ubuntu-20.04.tar.gz
        asset_name: socks_server-ubuntu-20.04.tar.gz
        asset_content_type: application/gzip

    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/socks_server-ubuntu-22.04/socks_server-ubuntu-22.04.tar.gz
        asset_name: socks_server-ubuntu-22.04.tar.gz
        asset_content_type: application/gzip

    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/socks_server-centos-7/socks_server-centos-7.tar.gz
        asset_name: socks_server-centos-7.tar.gz
        asset_content_type: application/gzip

    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/socks_server-centos-8/socks_server-centos-8.tar.gz
        asset_name: socks_server-centos-8.tar.gz
        asset_content_type: application/gzip

    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/socks_server-centos-9/socks_server-centos-9.tar.gz
        asset_name: socks_server-centos-9.tar.gz
        asset_content_type: application/gzip

    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/socks_server-windows-latest/socks_server-windows-latest.zip
        asset_name: socks_server-windows-latest.zip
        asset_content_type: application/zip

    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/socks_server-windows-2016/socks_server-windows-2016.zip
        asset_name: socks_server-windows-2016.zip
        asset_content_type: application/zip

    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/socks_server-windows-2019/socks_server-windows-2019.zip
        asset_name: socks_server-windows-2019.zip
        asset_content_type: application/zip

    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/socks_server-windows-2022/socks_server-windows-2022.zip
        asset_name: socks_server-windows-2022.zip
        asset_content_type: application/zip