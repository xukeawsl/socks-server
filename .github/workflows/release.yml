name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up CMake
        uses: actions/setup-cmake@v3
        with:
          cmake-version: '3.19.0'

      - name: Install dependencies and build
        run: |
          if [ $RUNNER_OS == 'Linux' ]; then
            sudo apt-get install -y build-essential
          elif [ $RUNNER_OS == 'Windows' ]; then
            choco install cmake
          fi
          mkdir build && cd build && cmake .. && cmake --build .

      - name: Prepare and compress build artifacts
        run: |
          mkdir -p release
          cp ./bin/socks_server ./config.json release/
          if [ $RUNNER_OS == 'Linux' ]; then
            tar -czf socks-server-linux.tar.gz -C release .
          elif [ $RUNNER_OS == 'Windows' ]; then
            zip -r socks-server-windows.zip release/
          fi

      - name: Upload compressed artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-${{ matrix.os }}
          path: |
            socks-server-linux.tar.gz
            socks-server-windows.zip

  release:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            socks-server-linux.tar.gz
            socks-server-windows.zip
